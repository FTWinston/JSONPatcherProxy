/*! JSONPatcherProxy version: 0.0.10 */
var JSONPatcherProxy=function(e){var t={};function r(o){if(t[o])return t[o].exports;var a=t[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,r),a.l=!0,a.exports}return r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)r.d(o,a,function(t){return e[t]}.bind(null,a));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";
/*!
 * https://github.com/Palindrom/JSONPatcherProxy
 * (c) 2017 Starcounter 
 * MIT license
 * 
 * Vocabulary used in this file:
 *  * root - root object that is deeply observed by JSONPatcherProxy
 *  * tree - any subtree within the root or the root
 */const o=function(){function e(e){return-1==e.indexOf("/")&&-1==e.indexOf("~")?e:e.replace(/~/g,"~0").replace(/\//g,"~1")}function t(e,t){const r=[];let o=e._parenthoodMap.get(t);for(;o&&o.key;)r.unshift(o.key),o=e._parenthoodMap.get(o.parent);if(r.length){return"/"+r.join("/")}return""}function r(e,t){this._isProxifyingTreeNow=!1,this._isObserving=!1,this._treeMetadataMap=new Map,this._parenthoodMap=new Map,"boolean"!=typeof t&&(t=!0),this._showDetachedWarning=t,this._originalRoot=e,this._cachedProxy=null,this._isRecording=!1,this._userCallback,this._defaultCallback,this._patches}return r.deepClone=function(e){switch(typeof e){case"object":return JSON.parse(JSON.stringify(e));case"undefined":return null;default:return e}},r.escapePathComponent=e,r.prototype._generateProxyAtKey=function(r,o,a){if(!o)return o;const n={set:(...r)=>(function(r,o,a,n,i){const s=t(r,a)+"/"+e(n),c=r._treeMetadataMap.get(i);r._treeMetadataMap.has(i)&&r._parenthoodMap.set(c.originalObject,{parent:a,key:n}),c&&!r._isProxifyingTreeNow&&(c.inherited=!0),i&&"object"==typeof i&&!r._treeMetadataMap.has(i)&&(r._parenthoodMap.set(i,{parent:a,key:n}),i=r._proxifyTreeRecursively(a,i,n));const p={op:"remove",path:s},l=Array.isArray(a);if(void 0===i){if(!l&&!a.hasOwnProperty(n))return Reflect.set(a,n,i,o);{l&&(p.op="replace",p.value=null);const e=r._treeMetadataMap.get(a[n]);e&&(r._parenthoodMap.delete(a[n]),r._disableTrapsForTreeMetadata(e),r._treeMetadataMap.delete(e))}}else{if(l&&!Number.isInteger(+n.toString()))return"length"!=n&&console.warn("JSONPatcherProxy noticed a non-integer prop was set for an array. This will not emit a patch"),Reflect.set(a,n,i,o);p.op="add",a.hasOwnProperty(n)&&(void 0!==a[n]||l)&&(p.op="replace"),p.value=i}const h=Reflect.set(a,n,i,o);return r._defaultCallback(p),h})(this,i.proxy,...r),deleteProperty:(...r)=>(function(r,o,a){if(void 0!==o[a]){const n=t(r,o)+"/"+e(a),i=r._treeMetadataMap.get(o[a]);i&&(i.inherited?i.inherited=!1:(r._parenthoodMap.delete(i.originalObject),r._disableTrapsForTreeMetadata(i),r._treeMetadataMap.delete(o[a])));const s=Reflect.deleteProperty(o,a);return r._defaultCallback({op:"remove",path:n}),s}})(this,...r)},i=Proxy.revocable(o,n);return i.handler=n,i.originalObject=o,this._parenthoodMap.set(o,{parent:r,key:a}),this._treeMetadataMap.set(i.proxy,i),i.proxy},r.prototype._proxifyTreeRecursively=function(t,r,o){for(let t in r)r.hasOwnProperty(t)&&r[t]instanceof Object&&(r[t]=this._proxifyTreeRecursively(r,r[t],e(t)));return this._generateProxyAtKey(t,r,o)},r.prototype._proxifyRoot=function(e){this.pause(),this._isProxifyingTreeNow=!0;const t=this._proxifyTreeRecursively(void 0,e,"");return this._isProxifyingTreeNow=!1,this.resume(),t},r.prototype._disableTrapsForTreeMetadata=function(e){if(this._showDetachedWarning){const t="You're accessing an object that is detached from the observedObject tree, see https://github.com/Palindrom/JSONPatcherProxy#detached-objects";e.handler.set=(e,r,o)=>(console.warn(t),Reflect.set(e,r,o)),e.handler.set=(e,r,o)=>(console.warn(t),Reflect.set(e,r,o)),e.handler.deleteProperty=(e,t)=>Reflect.deleteProperty(e,t)}else delete e.handler.set,delete e.handler.get,delete e.handler.deleteProperty},r.prototype.observe=function(e,t){if(!e&&!t)throw new Error("You need to either record changes or pass a callback");return this._isRecording=e,this._userCallback=t,e&&(this._patches=[]),this._cachedProxy=this._proxifyRoot(this._originalRoot),this._cachedProxy},r.prototype.generate=function(){if(!this._isRecording)throw new Error("You should set record to true to get patches later");return this._patches.splice(0,this._patches.length)},r.prototype.revoke=function(){this._treeMetadataMap.forEach(e=>{e.revoke()})},r.prototype.disableTraps=function(){this._treeMetadataMap.forEach(this._disableTrapsForTreeMetadata,this)},r.prototype.resume=function(){this._defaultCallback=e=>{this._isRecording&&this._patches.push(e),this._userCallback&&this._userCallback(e)},this._isObserving=!0},r.prototype.pause=function(){this._defaultCallback=()=>{},this._isObserving=!1},r}();e.exports=o,e.exports.default=o}]).default;